generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type CompaniesMcaData {
  count      Int
  module     String
  result     CompaniesMcaDataResult[]
  searchType String
}

type CompaniesMcaDataResult {
  acntType            String
  cmpnyEndDt          String
  cmpnyNm             String
  cmpnyOrgn           String
  cmpnySts            String
  cnNmbr              String
  companyType         String
  dateOfIncorporation String
  prvsCmpnyNm         String
  rcNm                String
  rgstrtnNmbr         String
  rocCode             String
  state               String
}

type IssuancesCashFlowSchedule {
  /// Multiple data types found: Float: 99%, Int: 1% out of 5447 sampled entries
  interest     Json?
  payment_date String
  /// Multiple data types found: Float: 2.2%, Int: 97.8% out of 5447 sampled entries
  principal    Json?
  record_date  String?
}

type IssuancesLatestBseTrade {
  turnover Float
  wap      String
  way      String
}

type IssuancesLatestNseTrade {
  turnover Float
  wap      String
  way      String
}


model Company {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  cin              String?
  created_at       DateTime          @db.Date
  mca_data         CompaniesMcaData?
  mca_sourced_date DateTime?         @db.Date
  name             String?
  status           String?
  active_issuances Int?
  updated_at       DateTime          @db.Date

  @@map("companies")
}

model Issuance {
  id                   String                      @id @default(auto()) @map("_id") @db.ObjectId
  allotment_date       DateTime?                    @db.Date
  bse_scrip            String?
  cash_flow_schedule   IssuancesCashFlowSchedule[]
  cin                  String?
  company_name         String?
  coupon               Float?
  coupon_basis         String?
  coupon_type          String?
  created_at           DateTime                    @db.Date
  day_count_convention String?
  face_value           Int?
  interest_frequency   String?
  isin                 String?
  issue_size           Unsupported("Decimal128")?
  latest_bse_trade     IssuancesLatestBseTrade?
  latest_nse_trade     IssuancesLatestNseTrade?
  latest_rating        String?
  latest_rating_agency String?
  latest_rating_date   DateTime?                   @db.Date
  latest_trade_date    DateTime?                   @db.Date
  nsdl_data            Json?
  nse_data             Json?
  nse_scrip            String?
  redemption_date      DateTime?                    @db.Date
  redemption_type      String?
  updated_at           DateTime                    @db.Date

  @@index([isin, id], map: "isin_1__id_1")
  @@map("issuances")
}

model Yield {
  id              String                    @id @default(auto()) @map("_id") @db.ObjectId
  a_yield         Float
  aa_yield        Float
  aaa_yield       Float
  bbb_yield       Float
  calculated_date DateTime                  @db.Date
  tenor_bucket    String
  created_at      DateTime                  @db.Date
  updated_at      DateTime                  @db.Date

   @@map("yields")
}

model Market {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  created_at           DateTime                  @default(now())
  updated_at           DateTime                  @updatedAt
  date                 DateTime                  @db.Date
  version              Int
  isin                 String
  cin                  String?
  company_name         String?
  description          String?
  face_value           Int?
  allotment_date       DateTime?                    @db.Date
  redemption_date      DateTime?                   @db.Date
  coupon               Float?
  coupon_basis         String?
  coupon_type          String?
  latest_rating        String?
  latest_rating_agency String?
  latest_rating_date   DateTime?                   @db.Date
  interest_frequency   String?
  principal_frequency  String?
  bse_scrip            String?
  nse_scrip            String?
  
  open                 Float?
  close                Float?
  total_buy_order      Int?
  total_sell_order     Int?
  buy_price            Float?
  sell_price           Float?
  buy_volume           Float?
  sell_volume          Float?
  bse_scrape           Json?
  nse_scrape           Json?
  market_depth         Json?

  @@unique([date, isin])

  @@map("markets")
}
