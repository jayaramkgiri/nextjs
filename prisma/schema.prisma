generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Company {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now()) @db.Timestamp(6)
  updatedAt  DateTime   @updatedAt
  cin        String?    @unique(map: "UQ_Company_Cin") @db.VarChar(255)
  name       String?    @db.VarChar(255)
  verified   Boolean?
  verifiedAt DateTime?  @db.Timestamp(6)
  rated      Boolean?
  listed     Boolean?
  issuances  Issuance[]
}

model Issuance {
  id                       BigInt    @id(map: "issuances_pkey") @default(autoincrement())
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  isin                     String?   @db.VarChar
  cin                      String?   @db.VarChar
  description              String?   @db.VarChar
  secured                  String?   @db.VarChar
  guarantee                String?   @db.VarChar
  convertibility           String?   @db.VarChar
  seniority                String?   @db.VarChar
  taxFree                  String?   @db.VarChar
  faceValue                Float?
  putOption                String?   @db.VarChar
  callOption               String?   @db.VarChar
  mode                     String?   @db.VarChar
  allotmentDate            DateTime? @db.Date
  perpetual                String?   @db.VarChar
  totalAllotment           Float?
  issuePrice               Float?
  issueSize                Float?
  greenShoeOption          String?   @db.VarChar
  couponBasis              String?   @db.VarChar
  couponRate               String?   @db.VarChar
  couponType               String?   @db.VarChar
  dayCountConvention       String?   @db.VarChar
  interestPayment          String?   @db.VarChar
  interestPaymentStartDate DateTime? @db.Date
  interestPaymentEndDate   DateTime? @db.Date
  redemptionType           String?   @db.VarChar
  redemptionDate           DateTime? @db.Date
  redemptionPremium        String?   @db.VarChar
  ratingAtIssuance         String?   @db.VarChar
  ratingAgencyAtIssuance   String?   @db.VarChar
  ratedDateAtIssuance      DateTime? @db.Date
  depository               String?   @db.VarChar
  coupon                   Float?
  dayCount                 String?   @db.VarChar
  paymentFrequency         String?   @db.VarChar
  company                  Company?  @relation(fields: [cin], references: [cin], onDelete: NoAction, onUpdate: NoAction, map: "company_foreign_key")
}

model BseOrderBook {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  seqNo        Int
  isin         String    @db.VarChar(255)
  scripName    String    @db.VarChar(255)
  scripCode    String    @db.VarChar(255)
  faceValue    Float?
  maturityDate DateTime? @db.Date
  creditRating String?   @db.VarChar(255)
  close        Float?
  open         Float?
  high         Float?
  low          Float?
  totalBuyQty  Int?
  totalSellQty Int?
  buyPrice     Float?
  sellPrice    Float?
}

model NseOrderBook {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  seqNo        Int
  isin         String    @db.VarChar(255)
  scripName    String    @db.VarChar(255)
  faceValue    Float?
  maturityDate DateTime? @db.Date
  creditRating String?   @db.VarChar(255)
  close        Float?
  open         Float?
  high         Float?
  low          Float?
  totalBuyQty  Int?
  totalSellQty Int?
  buyPrice     Float?
  sellPrice    Float?
}

model orderBook {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  exchange     String    @db.VarChar(255)
  seqNo        Int
  isin         String    @db.VarChar(255)
  scripName    String    @db.VarChar(255)
  scripCode    String?    @db.VarChar(255)
  faceValue    Float?
  maturityDate DateTime? @db.Date
  creditRating String?   @db.VarChar(255)
  close        Float?
  open         Float?
  high         Float?
  low          Float?
  totalBuyQty  Int?
  totalSellQty Int?
  buyPrice     Float?
  sellPrice    Float?
}
